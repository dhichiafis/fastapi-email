from fastapi import FastAPI, BackgroundTasks, Form
from fastapi_mail import FastMail, MessageSchema, ConnectionConfig
from pydantic import BaseModel
from fastapi.middleware.cors import CORSMiddleware
import uvicorn
import resend 

class EmailSchema(BaseModel):
    email: str
    message:str


conf = ConnectionConfig(
    MAIL_USERNAME="odhispapa56@gmail.com",#this is teh name the person recieving teh email will see
    MAIL_PASSWORD="xcjl kwut amnk oyri",# thsi is a password generated by creating an app password and app name 
    MAIL_FROM="odhispapa56@gmail.com",#this is the sender of the email and it must match the mail username
    MAIL_PORT=465,
    MAIL_SERVER="smtp.gmail.com",
    MAIL_STARTTLS=False,  # use STARTTLS for port 587
    MAIL_SSL_TLS=True     # use SSL/TLS for port 465
)

app = FastAPI()
app.add_middleware(
    CORSMiddleware,
    allow_origins=['*'],
    allow_credentials=True,
    allow_methods=['*'],
    allow_headers=['*']
)
html = """
hey there you have been sent the email successfully 
"""
#apassw0rd=xcjl kwut amnk oyri

async def send_email(email: str, message: str):
    message_obj = MessageSchema(
        subject="Account creation successfull",
        recipients=[email],   # must be a list
        body=message,
        subtype="html"
    )
    fm = FastMail(conf)
    await fm.send_message(message_obj)


@app.post('/')
async def home():
    return {'message': 'we are here creating and sending emails'}


@app.post('/send/notifications/')
async def send_notifications(
    background_tasks: BackgroundTasks,
    email:EmailSchema
):
    background_tasks.add_task(send_email, email.email, email.message)
    return {"message": f"Email sent to {email}!"}
resend.api_key="re_3TbEqGxo_FZVGRX6yKbxhvrVCz7vmWgCm"
params: resend.Emails.SendParams = {
    "from": "Acme <onboarding@resend.dev>",
    "to": ["ochiengodhiambo56@gmail.com"],
    "subject": "hello world",
    "html": "<strong>it works!</strong>",
}
@app.post('/resend')
async def send_using_resend():
    email=resend.Emails.send(params)
    return {'message':'emil sends'}
if __name__ == "__main__":
    uvicorn.run("second:app", host="127.0.0.1", port=8000, reload=True)
